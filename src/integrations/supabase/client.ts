
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

// Define the Database type structure for TypeScript
export type Database = {
  public: {
    Tables: {
      companies: {
        Row: {
          id: string;
          company_name: string;
          created_at: string | null;
          updated_at: string | null;
        };
        Insert: {
          id?: string;
          company_name: string;
          created_at?: string | null;
          updated_at?: string | null;
        };
        Update: {
          id?: string;
          company_name?: string;
          created_at?: string | null;
          updated_at?: string | null;
        };
      };
      employee_registrations: {
        Row: {
          id: string;
          full_name: string;
          first_name: string;
          mid_name: string | null;
          last_name: string;
          employee_id: string;
          insurance_number: string | null;
          position: string | null;
          area: string | null;
          sex: string | null;
          request_type: string | null;
          company_id: string | null;
          user_id: string | null;
          photo_url: string | null;
          status: string | null;
          submission_date: string | null;
          printed: boolean | null;
          printed_at: string | null;
          collected_at: string | null;
          collector_name: string | null;
        };
        Insert: {
          id?: string;
          full_name: string;
          first_name: string;
          mid_name?: string | null;
          last_name: string;
          employee_id: string;
          insurance_number?: string | null;
          position?: string | null;
          area?: string | null;
          sex?: string | null;
          request_type?: string | null;
          company_id?: string | null;
          user_id?: string | null;
          photo_url?: string | null;
          status?: string | null;
          submission_date?: string | null;
          printed?: boolean | null;
          printed_at?: string | null;
          collected_at?: string | null;
          collector_name?: string | null;
        };
        Update: {
          id?: string;
          full_name?: string;
          first_name?: string;
          mid_name?: string | null;
          last_name?: string;
          employee_id?: string;
          insurance_number?: string | null;
          position?: string | null;
          area?: string | null;
          sex?: string | null;
          request_type?: string | null;
          company_id?: string | null;
          user_id?: string | null;
          photo_url?: string | null;
          status?: string | null;
          submission_date?: string | null;
          printed?: boolean | null;
          printed_at?: string | null;
          collected_at?: string | null;
          collector_name?: string | null;
        };
      };
      employee_requests: {
        Row: {
          id: string;
          employee_name: string;
          employee_id: string;
          request_type: string;
          company_name: string | null;
          company_id: string | null;
          type: string | null;
          status: string | null;
          company_number: string | null;
          tax_card_number: string | null;
          commercial_register_number: string | null;
          notes: string | null;
          request_date: string | null;
          user_id: string | null;
        };
        Insert: {
          id?: string;
          employee_name: string;
          employee_id: string;
          request_type: string;
          company_name?: string | null;
          company_id?: string | null;
          type?: string | null;
          status?: string | null;
          company_number?: string | null;
          tax_card_number?: string | null;
          commercial_register_number?: string | null;
          notes?: string | null;
          request_date?: string | null;
          user_id?: string | null;
        };
        Update: {
          id?: string;
          employee_name?: string;
          employee_id?: string;
          request_type?: string;
          company_name?: string | null;
          company_id?: string | null;
          type?: string | null;
          status?: string | null;
          company_number?: string | null;
          tax_card_number?: string | null;
          commercial_register_number?: string | null;
          notes?: string | null;
          request_date?: string | null;
          user_id?: string | null;
        };
      };
      registration_requests: {
        Row: {
          id: string;
          documents: Record<string, any> | null;
          full_name: string | null;
          national_id: string | null;
        };
        Insert: {
          id: string;
          documents?: Record<string, any> | null;
          full_name?: string | null;
          national_id?: string | null;
        };
        Update: {
          id?: string;
          documents?: Record<string, any> | null;
          full_name?: string | null;
          national_id?: string | null;
        };
      };
      position_types: {
        Row: {
          id: string;
          name: string;
        };
        Insert: {
          id?: string;
          name: string;
        };
        Update: {
          id?: string;
          name?: string;
        };
      };
    };
    Views: {};
    Functions: {};
    Enums: {};
  };
  storage: {
    Tables: {
      buckets: {
        Row: {
          id: string;
          name: string;
          public: boolean | null;
        };
        Insert: {
          id: string;
          name: string;
          public?: boolean | null;
        };
        Update: {
          id?: string;
          name?: string;
          public?: boolean | null;
        };
      };
      objects: {
        Row: {
          id: string;
          bucket_id: string;
          name: string;
          owner: string | null;
          metadata: Record<string, any> | null;
        };
        Insert: {
          id?: string;
          bucket_id: string;
          name: string;
          owner?: string | null;
          metadata?: Record<string, any> | null;
        };
        Update: {
          id?: string;
          bucket_id?: string;
          name?: string;
          owner?: string | null;
          metadata?: Record<string, any> | null;
        };
      };
    };
    Views: {};
    Functions: {};
    Enums: {};
  };
};

const SUPABASE_URL = "https://dvdgjlhucllfexdiwekh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR2ZGdqbGh1Y2xsZmV4ZGl3ZWtoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUxMDk1MjksImV4cCI6MjA2MDY4NTUyOX0.1bsFmfAeu50B_fe-BAGNbQwj93SNrgiwy5tzY9DYzmY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
